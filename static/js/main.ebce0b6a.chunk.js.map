{"version":3,"sources":["components/CreateQuestion.module.css","components/Answer.module.css","components/CreateQuestionsForQuestionBankComponent.module.css","components/Heading.module.css","components/TestAnswer.js","components/AnswerQuestion.js","components/PageNavigator.js","components/AnswersWrapper.js","components/NewTest.js","pages/Test.js","components/CreateQuestionBankComponent.js","components/Answer.js","components/CreateQuestion.js","components/DisplayAnswer.js","components/ViewQuestion.js","components/ViewQuestions.js","components/Questions.js","components/ViewQuestionBanks.js","pages/QuestionBank.js","components/CreateQuestionsForQuestionBankComponent.js","pages/CreateQuestions.js","components/Heading.js","App.js","index.js"],"names":["module","exports","TestAnswer","props","option","isSingle","className","type","name","checked","answerSubmitted","value","answer","onChange","optionChanged","AnswerQuestion","question","questionHint","id","questionId","answers","optionChangedHandler","answr","answersTemp","map","a","answerChanged","style","index","backgroundColor","title","htmlFor","ans","bind","PageNavigator","noOfQuestionsPerPage","totalQuestions","currentPage","display","justifyContent","alignItems","border","onClick","submitTest","disabled","isSubmitted","showNextPage","showPrevPage","class","prev","visibility","next","AnswersWrapper","useState","setCurrentPage","pageQuestions","setPageQuestions","useEffect","answersSelected","length","slice","prevVal","NewTest","questionBanks","setQuestionBanks","qnsBankIsValid","setQnsBankIsValid","noOfQuestions","setNoOfQuestions","loading","setIsLoading","nameIsValid","setNameIsValid","questionBankID","setquestionBankID","questions","setQuestions","tests","setTests","currentTest","setCurrentTest","setAnswers","testScore","setTestScore","nameInputRef","useRef","emailInputRef","getMarksScored","correctAnswers","forEach","qns","qnsAnsweredCorrect","qnsAnsweredCorrectVal","qnsAnsweredCorrectPerc","Math","round","submitTestHandler","score","modifiedTests","t","submitted","fetch","method","body","JSON","stringify","headers","loadData","response","json","data","filter","qnsBank","startTestHandler","current","trim","test","uuid","email","testsModified","push","answersChanged","changedPageQuestions","pqns","textAlign","onSubmit","defaultValue","e","qsnBank","find","sqb","target","questionBank","color","ref","Test","CreateQuestionBankComponent","titleIsValid","setTitleIsValid","titleIsTaken","setTitleIsTaken","titleInputRef","saveHandler","preventDefault","some","qnsBnk","addQuestionBank","Answer","answerIsValid","textIsValid","setTextIsValid","single","checkedChanged","rows","resize","isLast","classes","remove","CreateQuestion","questionType","setQuestionType","duplicates","setDuplicates","sameQuestion","setSameQuestion","questionIsValid","setQuestionIsValid","setAnswerIsValid","answersIsValid","setAnswersIsValid","answerCount","setAnswerCount","setOption","checkedValues","setCheckedValues","questionInputRef","questionHintInputRef","console","log","resetNew","setQsnTypeChangeHandler","i","prevOption","answerChangeHandler","prevAnswer","answersPrev","duplicateElements","item","indexOf","isValid","answersIsValidTmp","checkedChangedHandler","prevCheckedValues","checkedValuesPrev","removeHandler","prevState","pop","addQuestionHandler","answerSelected","answersToPost","questionBankId","responseGet","addQuestion","content","overflowx","overflowY","marginRight","prevAnswersIsValid","answersComp","getAnswers","dup","actions","DisplayAnswer","readOnly","removeQuestion","ViewQuestion","ViewQuestions","maxHeight","overflowX","Questions","ViewQuestionBanks","isLoading","removeQuestionBank","QuestionBank","addQuestionBankHandler","removeQuestionBankHandler","CreateQuestionsForQuestionBankComponent","setResetNew","removeQuestionHandler","setTimeout","createQuestionsForQuestionBank","Heading","to","activeClassName","href","NotFound","minHeight","App","basename","process","path","exact","element","CreateQuestions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebce0b6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-small\":\"CreateQuestion_btn-small__21NgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-small\":\"Answer_btn-small__2YZPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"CreateQuestionsForQuestionBankComponent_actions__1SWZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-link\":\"Heading_nav-link__1RpAV\"};","const TestAnswer = (props) => {\r\n  let option;\r\n  if (props.isSingle) {\r\n    option = (\r\n      <div className=\"col-1\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name={props.name}\r\n            checked={\r\n              !!props.answerSubmitted\r\n            }\r\n            value={props.answer}\r\n            onChange={props.optionChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    option = (\r\n      <div className=\"col-1\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            name={props.answer}\r\n            checked={!!props.answerSubmitted}\r\n            onChange={props.optionChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row mb-2\">\r\n        {option}\r\n        <div className=\"col-9\">\r\n          <label className=\"form-check-label\">{props.answer}</label>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default TestAnswer;\r\n","import { useState, useEffect } from \"react\";\r\nimport TestAnswer from \"./TestAnswer\";\r\nconst AnswerQuestion = (props) => {\r\n  // const [answersSubmitted, setAnswersSubmitted] = useState([]);\r\n  const { question, questionHint, questionId, id, isSingle, answers } =\r\n    props.answer;\r\n  // useEffect(() => {\r\n  //   const answersTemp = [...answers];\r\n  //   answersTemp.map((a) => {\r\n  //     a.answerSubmitted = false;\r\n  //   });\r\n  //   setAnswersSubmitted(answersTemp);\r\n  //   props.answerChanged(id,answersTemp)\r\n  // }, []);\r\n\r\n  const optionChangedHandler = (answr) => {\r\n    let answersTemp = [...answers];\r\n    debugger\r\n    if(isSingle)\r\n    {\r\n      answersTemp=answersTemp.map((a) => {\r\n        if (a.answer === answr.answer) {\r\n          a.answerSubmitted = true;\r\n        } else a.answerSubmitted = false;\r\n        return a\r\n      });  \r\n    }else{\r\n      answersTemp=answersTemp.map((a) => {\r\n        if (a.answer === answr.answer) {\r\n          a.answerSubmitted = !a.answerSubmitted;\r\n        }\r\n        return a\r\n      });  \r\n    }\r\n    // setAnswersSubmitted(answersTemp);\r\n    props.answerChanged(id,answersTemp)\r\n  };\r\n  return (\r\n    <div\r\n      className={`row justify-content-center align-items-center `}\r\n      data-bs-toggle=\"tooltip\"\r\n      data-bs-html=\"true\"\r\n      data-bs-placement=\"bottom\"\r\n      style={\r\n        props.index % 2 === 0 ? { backgroundColor: \"rgb(247, 248, 249)\" } : null\r\n      }\r\n      title={questionHint && `Hint: ${questionHint}`}\r\n    >\r\n      <div className=\"row  mb-3\">\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"question\">\r\n            Question :\r\n          </label>\r\n          <label className=\"form-text ms-3\">{question}</label>\r\n        </div>\r\n      </div>\r\n      {answers.map((ans, index) => {    \r\n        // debugger    \r\n        return (\r\n          <TestAnswer\r\n            key={index}\r\n            answer={ans.answer}\r\n            value={ans.value}\r\n            isSingle={isSingle}\r\n            answerSubmitted={ans.answerSubmitted}\r\n            optionChanged={optionChangedHandler.bind(null, ans)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default AnswerQuestion;\r\n","const PageNavigator = (props) => {\r\n  const { noOfQuestionsPerPage, totalQuestions, currentPage } = props;\r\n  if (totalQuestions <= noOfQuestionsPerPage)\r\n    return (\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          border: \"2px solid rgb(247, 248, 249)\",\r\n        }}\r\n      >\r\n        <div className=\"col-2 my-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-auto d-block\"\r\n            onClick={props.submitTest}\r\n            disabled={props.isSubmitted}\r\n          >\r\n            Submit Test\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  const showNextPage = currentPage * noOfQuestionsPerPage < totalQuestions;\r\n  const showPrevPage = currentPage !== 1;\r\n  return (\r\n    <>\r\n      <div\r\n        class=\"row\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          border: \"2px solid rgb(247, 248, 249)\",\r\n        }}\r\n      >\r\n        <div className=\"col-1  my-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary\"\r\n            onClick={props.prev}\r\n            style={{ visibility: showPrevPage ? \"visible\" : \"hidden\" }}\r\n          >\r\n            Prev\r\n          </button>\r\n        </div>\r\n\r\n        <h6 className=\"col-1  my-3 text-primary\">{`Page ${currentPage}`}</h6>\r\n\r\n        <div className=\"col-1  my-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary\"\r\n            onClick={props.next}\r\n            style={{ visibility: showNextPage ? \"visible\" : \"hidden\" }}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {(!showNextPage || (!showNextPage && !showPrevPage)) && (\r\n        <div\r\n          class=\"row\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"2px solid rgb(247, 248, 249)\",\r\n          }}\r\n        >\r\n          <div className=\"col-2 my-3\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-auto d-block\"\r\n              onClick={props.submitTest}\r\n              style={{ visibility: showPrevPage ? \"visible\" : \"hidden\" }}\r\n              disabled={props.isSubmitted}\r\n            >\r\n              Submit Test\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default PageNavigator;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport AnswerQuestion from \"./AnswerQuestion\";\r\nimport PageNavigator from \"./PageNavigator\";\r\nconst AnswersWrapper = (props) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n  const [pageQuestions, setPageQuestions] = useState([]);\r\n  let { noOfQuestionsPerPage, answers } = props;\r\n  noOfQuestionsPerPage = +noOfQuestionsPerPage;\r\n  useEffect(() => {\r\n    \r\n    let answersSelected;\r\n    if (noOfQuestionsPerPage >= answers.length) {\r\n      // setQuestionsPerPage(answers.length);\r\n      answersSelected = answers;\r\n    } else {\r\n      // setQuestionsPerPage(noOfQuestionsPerPage);\r\n\r\n      if (\r\n        answers.length - (currentPage - 1) * noOfQuestionsPerPage >\r\n        noOfQuestionsPerPage\r\n      )\r\n        answersSelected = answers.slice(\r\n          (currentPage - 1) * noOfQuestionsPerPage,\r\n          (currentPage - 1) * noOfQuestionsPerPage + noOfQuestionsPerPage\r\n        );\r\n      else\r\n        answersSelected = answers.slice(\r\n          (currentPage - 1) * noOfQuestionsPerPage,\r\n          (currentPage - 1) * noOfQuestionsPerPage +\r\n            (answers.length - (currentPage - 1) * noOfQuestionsPerPage)\r\n        );\r\n    }\r\n    \r\n    setPageQuestions(answersSelected);\r\n  }, [currentPage]);\r\n  \r\n  const nextHandler = () => {\r\n    setCurrentPage((prevVal) => prevVal + 1);\r\n  };\r\n  const prevHandler = () => {\r\n    setCurrentPage((prevVal) => prevVal - 1);\r\n  };\r\n  return (\r\n    <>\r\n      {pageQuestions.map((ans, index) => (\r\n        <AnswerQuestion\r\n          index={index}\r\n          key={ans.id}\r\n          answer={ans}\r\n          \r\n          answerChanged={props.answerChanged}\r\n        />\r\n      ))}\r\n      <PageNavigator\r\n        noOfQuestionsPerPage={noOfQuestionsPerPage}\r\n        totalQuestions={answers.length}\r\n        currentPage={currentPage}\r\n        next={nextHandler}\r\n        prev={prevHandler}\r\n        submitTest={props.submitTest}\r\n        isSubmitted={props.isSubmitted}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnswersWrapper;\r\n","import { useRef, useEffect, useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport AnswersWrapper from \"./AnswersWrapper\";\r\nconst NewTest = () => {\r\n  const [questionBanks, setQuestionBanks] = useState([]);\r\n  const [qnsBankIsValid, setQnsBankIsValid] = useState(true);\r\n  const [noOfQuestions, setNoOfQuestions] = useState(\"2\");\r\n  const [loading, setIsLoading] = useState(false);\r\n  const [nameIsValid, setNameIsValid] = useState(true);\r\n  const [questionBankID, setquestionBankID] = useState();\r\n  const [questions, setQuestions] = useState();\r\n  const [tests, setTests] = useState([]);\r\n  const [currentTest, setCurrentTest] = useState();\r\n  const [answers, setAnswers] = useState([]);\r\n  const [testScore, setTestScore] = useState();\r\n\r\n  const nameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const noOfQuestionsChangeHandler = (e) => {\r\n    setNoOfQuestions(e.target.value);\r\n  };\r\n  const getMarksScored=()=>{\r\n    debugger\r\n    let correctAnswers=0\r\n    answers.forEach(qns=>{\r\n      let qnsAnsweredCorrect=true\r\n      let qnsAnsweredCorrectVal=0\r\n      let qnsAnsweredCorrectPerc=0\r\n      qns.answers.forEach(ans=>{        \r\n        if(qns.isSingle){\r\n          if(ans.value!==ans.answerSubmitted)  \r\n          {\r\n            qnsAnsweredCorrect=false\r\n            return\r\n          }          \r\n        }else{\r\n          if(ans.value===ans.answerSubmitted)  \r\n          {\r\n            qnsAnsweredCorrectVal++\r\n          }\r\n        }\r\n      })\r\n      if(qns.isSingle)\r\n      {\r\n        if(qnsAnsweredCorrect)\r\n        {\r\n          correctAnswers++\r\n        }  \r\n      }else{\r\n        qnsAnsweredCorrectPerc=(qnsAnsweredCorrectVal/qns.answers.length)\r\n        correctAnswers+=qnsAnsweredCorrectPerc\r\n      }\r\n    })\r\n    return Math.round(correctAnswers * 100) / 100\r\n  }\r\n  const submitTestHandler= async()=>{\r\n    debugger\r\n    const score=getMarksScored()\r\n     const modifiedTests= tests.map(t=>{\r\n      if(t.id===currentTest.id)\r\n      {\r\n        t.answers=answers\r\n        t.submitted=true\r\n        t.score=score\r\n      }\r\n      return t\r\n     })\r\n     \r\n     setTestScore(`You scored ${score}/${answers.length}` )\r\n     const response = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({ tests: modifiedTests }),\r\n        headers: { \"Content-type\": \"application/json\" },\r\n      }\r\n    );\r\n    debugger\r\n  }\r\n  const answerChangedHandler = (id, answersChanged) => {\r\n    debugger\r\n    const answersToBeChanged = [...answers];\r\n    const changedPageQuestions = answersToBeChanged.map((pqns) => {\r\n      if (pqns.id === id) {\r\n        pqns.answers = answersChanged;\r\n      }\r\n      return pqns;\r\n    });\r\n    setAnswers(changedPageQuestions);\r\n  };\r\n\r\n  const questionBankTitleChangeHandler = (e) => {\r\n    const qsnBank = questionBanks.find((sqb) => sqb.id === e.target.value);\r\n    setquestionBankID(e.target.value);\r\n    if (qsnBank && qsnBank.questions) {\r\n      setQuestions(qsnBank.questions);\r\n      \r\n      setTests(qsnBank.tests ? qsnBank.tests : []);\r\n      // setCurrentTest(() => {\r\n      //   const test = qsnBank.tests.find(\r\n      //     (t) => t.id === \"a82cad11-4ff3-48bc-9a95-92ea9c9756bc\"\r\n      //   );\r\n      //   if (test) setAnswers(test.answers);\r\n      //   return test;\r\n      // });\r\n      setQnsBankIsValid(true);\r\n    } else {\r\n      setQuestions(null);\r\n    }\r\n  };\r\n  const resetTestHandler=()=>{\r\n    setCurrentTest(null)\r\n    setTestScore(null)\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const loadData = async () => {\r\n      const response = await fetch(\"https://question-bank-json-server.herokuapp.com/questionBank\");\r\n      let data = await response.json();\r\n      // .filte((qnsBank) => qnsBank.questions.length > 0);\r\n      data = data.filter((qnsBank) => qnsBank.questions.length > 0);\r\n      setQuestionBanks(data);\r\n      setIsLoading(false);\r\n    };\r\n    loadData();\r\n  }, []);\r\n  const onNameChangeHandler = (e) => {\r\n    setNameIsValid(e.target.value.trim().length > 0);\r\n  };\r\n  const startTestHandler = async () => {\r\n    debugger;\r\n    if (nameInputRef.current.value.trim().length === 0) {\r\n      setNameIsValid(false);\r\n      return;\r\n    }\r\n    if (!questionBankID) {\r\n      setQnsBankIsValid(false);\r\n      return;\r\n    }\r\n    const test = { id: uuid() };\r\n\r\n    // const answersFromQuestions = questions.map((qns) => {\r\n    //   const { id: questionId, questionHint,answers, ...otherProps } = qns;\r\n    //   const ans = { ...otherProps, questionHint, questionId };\r\n    //   ans.id = uuid();\r\n    //   return ans;\r\n    // });\r\n    test.answers = questions.map((qns) => {\r\n      return {\r\n        ...qns,\r\n        answers: qns.answers.map((a) => {\r\n          return {\r\n            ...a,\r\n            answerSubmitted: null,\r\n          };\r\n        }),\r\n      };\r\n    });\r\n    test.name = nameInputRef.current.value;\r\n    test.email = emailInputRef.current.value;\r\n    test.noOfQuestionsPerPage = noOfQuestions;\r\n    const testsModified = [...tests];\r\n    setCurrentTest(test);\r\n    setAnswers(test.answers);\r\n    testsModified.push(test);\r\n    setTests(testsModified);\r\n\r\n    const response = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({ tests: testsModified }),\r\n        headers: { \"Content-type\": \"application/json\" },\r\n      }\r\n    );\r\n    // responseGet = await fetch(\r\n    //   `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`\r\n    // );\r\n    // data = await responseGet.json();\r\n    // setQuestions(data.questions);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <div className=\"justify-content-center align-items-center\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  if (!currentTest)\r\n    return (\r\n      <>\r\n        <div className={`row justify-content-center align-items-center`}>\r\n          <div\r\n            className=\"col-10\"\r\n            style={{ border: \"2px solid rgb(247, 248, 249)\" }}\r\n          >\r\n            <form onSubmit={() => {}} className=\"d-flex flex-column\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\" htmlFor=\"title\">\r\n                  Question bank title\r\n                </label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  aria-label=\"Default select example\"\r\n                  defaultValue=\"\"\r\n                  onChange={questionBankTitleChangeHandler}\r\n                >\r\n                  <option>please select a Question Bank</option>\r\n                  {questionBanks.map((questionBank) => (\r\n                    <option key={questionBank.id} value={questionBank.id}>\r\n                      {questionBank.title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {!qnsBankIsValid && (\r\n                  <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                    Please select a QuestionBank\r\n                  </label>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className={`row justify-content-center align-items-center`}>\r\n          <div\r\n            className=\"col-10\"\r\n            style={{ border: \"2px solid rgb(247, 248, 249)\" }}\r\n          >\r\n            <div className=\"row  mb-3\">\r\n              <div className=\"form-group col-6\">\r\n                <label className=\"form-label\" htmlFor=\"question\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  ref={nameInputRef}\r\n                  onChange={onNameChangeHandler}\r\n                />\r\n                {!nameIsValid && (\r\n                  <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                    Please enter your name\r\n                  </label>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group col-6\">\r\n                <label className=\"form-label\" htmlFor=\"noOfQuestions\">\r\n                  Number of Questions per page\r\n                </label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  aria-label=\"Default select example\"\r\n                  defaultValue=\"\"\r\n                  id=\"noOfQuestions\"\r\n                  onChange={noOfQuestionsChangeHandler}\r\n                  value={noOfQuestions}\r\n                >\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row  mb-3 justify-content-center\">\r\n              <div className=\"form-group col-6\">\r\n                <label className=\"form-label\" htmlFor=\"question\">\r\n                  E Mail\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  ref={emailInputRef}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row  mb-3 justify-content-center\">\r\n              <div className=\"form-group col-6 d-flex justify-content-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-outline-primary`}\r\n                  onClick={startTestHandler}\r\n                >\r\n                  Start Test\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  if (currentTest)\r\n    return (\r\n      <>\r\n      <AnswersWrapper\r\n        answers={answers}\r\n        noOfQuestionsPerPage={currentTest.noOfQuestionsPerPage}\r\n        answerChanged={answerChangedHandler}\r\n        submitTest={submitTestHandler}\r\n        isSubmitted={!!testScore}\r\n      />\r\n       {testScore&& (\r\n         <>\r\n        <div\r\n          class=\"row\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"2px solid rgb(247, 248, 249)\",\r\n          }}\r\n        >\r\n          \r\n          <div className=\"col-2 my-3 text-primary mx-auto d-block\">\r\n            <h6 style={{textAlign:\"center\"}}>\r\n              {testScore}\r\n            </h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"2px solid rgb(247, 248, 249)\",\r\n          }}\r\n        >\r\n          \r\n          <div className=\"col-2 my-3\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-auto d-block\"\r\n              onClick={resetTestHandler}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n        </>\r\n      )}\r\n      </>\r\n    );\r\n};\r\nexport default NewTest;\r\n","import NewTest from \"../components/NewTest\";\r\n\r\nconst Test=()=><NewTest/>\r\nexport default Test","import { useRef, useState } from \"react\";\r\nimport classes from \"./CreateQuestionBankComponent.module.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst CreateQuestionBankComponent = (props) => {\r\n  const [titleIsValid, setTitleIsValid] = useState(true);\r\n  const [titleIsTaken, setTitleIsTaken] = useState(false);\r\n  const titleInputRef = useRef();\r\n  const onTitleChangeHandler = () => {\r\n    setTitleIsTaken(false);\r\n    if (titleInputRef.current.value.trim() === \"\") {\r\n      setTitleIsValid(false);\r\n      return;\r\n    }\r\n    setTitleIsValid(true);\r\n  };\r\n  const saveHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (titleInputRef.current.value.trim() === \"\") {\r\n      setTitleIsValid(false);\r\n      return;\r\n    }\r\n    setTitleIsValid(true);\r\n    const response = await fetch(`https://question-bank-json-server.herokuapp.com/questionBank`);\r\n    const data = await response.json();\r\n    const some = data.some(\r\n      (qnsBnk) => qnsBnk.title === titleInputRef.current.value.trim()\r\n    );\r\n    if (some) {\r\n      setTitleIsTaken(true);\r\n      return;\r\n    }\r\n    const body = {\r\n      id: uuid(),\r\n      title: titleInputRef.current.value,\r\n      questions: [],\r\n      tests: []\r\n    };\r\n    props.addQuestionBank(body);\r\n  };\r\n  return (\r\n    <div\r\n      className={`row justify-content-center align-items-start mb-3`}\r\n    >\r\n      <div className=\"col-10 \">\r\n        <form onSubmit={saveHandler}>\r\n          <div className=\"row\">\r\n            <div className=\"col-10 \">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\" htmlFor=\"title\">\r\n                  Question bank title\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  type=\"text\"\r\n                  ref={titleInputRef}\r\n                  onChange={onTitleChangeHandler}\r\n                />\r\n                {!titleIsValid && (\r\n                  <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                    {\" \"}\r\n                    Please enter a title\r\n                  </label>\r\n                )}\r\n              </div>\r\n              {titleIsTaken && (\r\n                <>\r\n                  <div style={{ color: \"red\" }}>\r\n                    Question bank with same name already exists.\r\n                  </div>\r\n                  <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                    {titleInputRef.current.value}\r\n                  </label>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className={`col-2 d-flex align-items-end`}>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary d-block ms-auto align-self-end\"\r\n              >                \r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateQuestionBankComponent;\r\n","import { useState,useEffect } from 'react';\r\nimport classes from './Answer.module.css'\r\nconst Answer = (props) => {\r\n  \r\n  const [textIsValid,setTextIsValid]=useState(props.answerIsValid);\r\n  const {answerIsValid}=props;\r\n  useEffect(()=>{\r\n    setTextIsValid(answerIsValid)\r\n  },[answerIsValid])\r\n  const answerChangeHandler=(e)=>{    \r\n    setTextIsValid(e.target.value.trim().length>0)\r\n    props.answerChanged(e)    \r\n  }\r\n  let option;\r\n  if (props.single) {\r\n    option = (\r\n      <div className=\"col-1\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name={props.name}\r\n            checked={\r\n              props.answer === \"\" ? false : +props.answer === props.index\r\n            }\r\n            value={props.index}\r\n            onChange={props.optionChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    option = (\r\n      <div className=\"col-1\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            name={props.name}\r\n            checked={props.checked}\r\n            onChange={props.checkedChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row mb-2\">\r\n        {option}\r\n        <div className=\"col-9\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id={`${props.name}textarea${props.index}`}\r\n            type=\"text\"\r\n            rows={2}\r\n            style={{ resize: \"none\" }}\r\n            onChange={answerChangeHandler}\r\n            value={props.value}\r\n          />\r\n          {!textIsValid && (\r\n                <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                  Please enter an answer text\r\n                </label>\r\n              )}\r\n        </div>\r\n        {props.isLast && (\r\n          <div className=\"col-2 d-flex align-items-end ms-auto px-3 \">\r\n            <button\r\n              type=\"button\"\r\n              className={`btn btn-outline-primary  ${classes[\"btn-small\"]}`}\r\n              onClick={props.remove}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Answer;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport classes from \"./CreateQuestion.module.css\";\r\nconst CreateQuestion = (props) => {\r\n  const [questionType, setQuestionType] = useState(\"0\");\r\n  const [duplicates, setDuplicates] = useState([]);\r\n  const [sameQuestion, setSameQuestion] = useState(false);\r\n  const [questionIsValid, setQuestionIsValid] = useState(true);\r\n  const [answerIsValid, setAnswerIsValid] = useState(false);\r\n  const [answersIsValid, setAnswersIsValid] = useState([]);\r\n  const [answerCount, setAnswerCount] = useState(0);\r\n  const [option, setOption] = useState();\r\n  const [checkedValues, setCheckedValues] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const questionInputRef = useRef();\r\n  const questionHintInputRef = useRef();\r\n  console.log(\"resetNew2\", props.resetNew);\r\n  const { resetNew } = props;\r\n  useEffect(() => {\r\n    if (resetNew) {\r\n      setAnswers([]);\r\n      setAnswerCount(0);\r\n      setCheckedValues([]);\r\n      setQuestionType(\"0\");\r\n      setOption(\"\");\r\n      questionInputRef.current.value = \"\";\r\n      questionHintInputRef.current.value = \"\";\r\n    }\r\n  }, [resetNew]);\r\n  const onQuestionChangeHandler = (e) => {\r\n    setQuestionIsValid(e.target.value.trim().length > 0);\r\n  };\r\n  const setQsnTypeChangeHandler = (e) => {\r\n    setQuestionType(e.target.value);\r\n  };\r\n  const optionChangedHandler = (i, e) => {\r\n    setOption((prevOption) => {\r\n      prevOption = e.target.value;\r\n      return prevOption;\r\n    });\r\n  };\r\n  const answerChangeHandler = (i, e) => {\r\n    setAnswers((prevAnswer) => {\r\n      const answersPrev = [...prevAnswer];\r\n      answersPrev[+i - 1] = e.target.value;\r\n      const duplicateElements = answersPrev.filter(\r\n        (item, index) => answersPrev.indexOf(item) !== index\r\n      );\r\n\r\n      setDuplicates(duplicateElements);\r\n      return answersPrev;\r\n    });\r\n    let isValid = true;\r\n    answers.forEach((answer, index) => {\r\n      const answersIsValidTmp = [...answersIsValid];\r\n      if (i - 1 == index) {\r\n        answersIsValidTmp[+i - 1] = e.target.value.trim().length > 0;\r\n        if (e.target.value.trim().length == 0) {\r\n          isValid = false;\r\n        }\r\n      } else {\r\n        answersIsValidTmp[+i - 1] = answer.trim().length > 0;\r\n        if (answer.trim().length == 0) {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      setAnswersIsValid(answersIsValidTmp);\r\n    });\r\n    setAnswerIsValid(isValid);\r\n  };\r\n  const checkedChangedHandler = (i, e) => {\r\n    setCheckedValues((prevCheckedValues) => {\r\n      const checkedValuesPrev = [...prevCheckedValues];\r\n      checkedValuesPrev[+i - 1] = !checkedValuesPrev[+i - 1];\r\n      return checkedValuesPrev;\r\n    });\r\n  };\r\n  const addAnswerHandler = () => {\r\n    setAnswerCount((prevState) => prevState + 1);\r\n    setAnswers((prevAnswer) => {\r\n      prevAnswer.push(\"\");\r\n      return prevAnswer;\r\n    });\r\n    setCheckedValues((prevCheckedValues) => {\r\n      prevCheckedValues.push(\"\");\r\n      return prevCheckedValues;\r\n    });\r\n    setAnswersIsValid((prevAnswersIsValid) => {\r\n      prevAnswersIsValid.push(true);\r\n      return prevAnswersIsValid;\r\n    });\r\n  };\r\n  const removeHandler = (i) => {\r\n    setAnswerCount((prevState) => prevState - 1);\r\n\r\n    if (option == +i - 1) {\r\n      setOption(\"\");\r\n    }\r\n\r\n    setAnswers((prevAnswer) => {\r\n      prevAnswer.pop();\r\n      return prevAnswer;\r\n    });\r\n    setCheckedValues((prevCheckedValues) => {\r\n      prevCheckedValues.pop();\r\n      return prevCheckedValues;\r\n    });\r\n  };\r\n  const addQuestionHandler = async () => {\r\n    const questionIsValid = questionInputRef.current.value.trim().length > 0;\r\n    setQuestionIsValid(questionIsValid);\r\n    let isValid = true;\r\n    const answersIsValidTmp = [...answersIsValid];\r\n\r\n    answers.forEach((answer, index) => {\r\n      answersIsValidTmp[index] = answer.trim().length > 0;\r\n      if (answer.trim().length == 0) {\r\n        isValid = false;\r\n      }\r\n    });\r\n    setAnswerIsValid(isValid);\r\n    setAnswersIsValid(answersIsValidTmp);\r\n    if (\r\n      questionType === \"0\" &&\r\n      (!answerIsValid || !option || !questionIsValid)\r\n    ) {\r\n      return;\r\n    }\r\n    const answerSelected = checkedValues.some((ans) => ans === true);\r\n    if (\r\n      questionType === \"1\" &&\r\n      (!answerIsValid || !answerSelected || !questionIsValid)\r\n    ) {\r\n      return;\r\n    }\r\n    const duplicateElements = answers.filter(\r\n      (item, index) => answers.indexOf(item) !== index\r\n    );\r\n    setDuplicates(duplicateElements);\r\n    if (duplicateElements.length > 0) {\r\n      return;\r\n    }\r\n    let answersToPost = [];\r\n    if (questionType === \"0\") {\r\n      answers.forEach((ans, index) => {\r\n        answersToPost.push({ answer: ans, value: +index === +option });\r\n      });\r\n    } else {\r\n      answers.forEach((ans, index) => {\r\n        answersToPost.push({ answer: ans, value: !!checkedValues[index] });\r\n      });\r\n    }\r\n    const body = {\r\n      id: uuid(),\r\n      question: questionInputRef.current.value,\r\n      questionHint: questionHintInputRef.current.value,\r\n      isSingle: questionType === \"0\",\r\n      answers: answersToPost,\r\n    };\r\n\r\n    const responseGet = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${props.questionBankId}`\r\n    );\r\n    const data = await responseGet.json();\r\n    const questions = data.questions;\r\n    const found = questions.some(\r\n      (qns) => qns.question === questionInputRef.current.value\r\n    );\r\n    if (found) {\r\n      setSameQuestion(true);\r\n      return;\r\n    } else {\r\n      setSameQuestion(false);\r\n    }\r\n    questions.push(body);\r\n    props.addQuestion(questions);\r\n\r\n    // console.log(\"answerIsValid\", answerIsValid);\r\n    // console.log(\"option\", option);\r\n    // console.log(\"answers\", answers);\r\n    // console.log(\"checkedValues\", checkedValues);\r\n  };\r\n  const getAnswers = () => {\r\n    const answersComp = [];\r\n    for (let i = 1; i <= answerCount; i++) {\r\n      answersComp.push(\r\n        <Answer\r\n          key={i}\r\n          single={questionType === \"0\"}\r\n          name=\"answer\"\r\n          index={i - 1}\r\n          answer={option}\r\n          checked={checkedValues[i - 1]}\r\n          optionChanged={optionChangedHandler.bind(null, i)}\r\n          answerChanged={answerChangeHandler.bind(null, i)}\r\n          checkedChanged={checkedChangedHandler.bind(null, i)}\r\n          isLast={i == answerCount}\r\n          value={answers[i - 1]}\r\n          answerIsValid={answersIsValid[i - 1]}\r\n          remove={removeHandler.bind(null, i)}\r\n        />\r\n      );\r\n    }\r\n    return answersComp.length > 0 ? answersComp : null;\r\n  };\r\n  return (\r\n    <div\r\n      className={`row justify-content-center align-items-center ${classes.content}`}\r\n      style={{\r\n        border: \"2px solid rgb(247, 248, 249)\",\r\n        overflowx: \"hidden\",\r\n        overflowY: \"auto\",\r\n        marginRight: \"0px\",\r\n      }}\r\n    >\r\n      <div className=\"col-10 \">\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-2\">\r\n            <label className=\"form-label\">Question Type</label>\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"questionType\"\r\n                id=\"questionTypeSingle\"\r\n                checked={questionType === \"0\"}\r\n                value={\"0\"}\r\n                onChange={setQsnTypeChangeHandler}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"questionTypeSingle\">\r\n                Single\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"questionType\"\r\n                checked={questionType === \"1\"}\r\n                id=\"questionTypeMultiple\"\r\n                value={\"1\"}\r\n                onChange={setQsnTypeChangeHandler}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"questionTypeMultiple\"\r\n              >\r\n                Multiple\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row  mb-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\" htmlFor=\"question\">\r\n              Question\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"question\"\r\n              type=\"text\"\r\n              rows={2}\r\n              style={{ resize: \"none\" }}\r\n              ref={questionInputRef}\r\n              onChange={onQuestionChangeHandler}\r\n            />\r\n            {!questionIsValid && (\r\n              <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                Please enter a question\r\n              </label>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"row  mb-3\">\r\n          <div className=\"col-10\">\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\" htmlFor=\"questionHint\">\r\n                Question Hint\r\n              </label>\r\n\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"questionHint\"\r\n                type=\"text\"\r\n                rows={2}\r\n                ref={questionHintInputRef}\r\n                style={{ resize: \"none\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 d-flex align-items-end ms-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className={`btn btn-outline-primary  ${classes[\"btn-small\"]}`}\r\n              onClick={addAnswerHandler}\r\n            >\r\n              Add Answer\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {getAnswers()}\r\n        {duplicates && duplicates.length > 0 && (\r\n          <>\r\n            <div style={{ color: \"red\" }}>Duplicate entries found</div>\r\n            {duplicates.map((dup, index) => (\r\n              <div key={index}>\r\n                <label className=\"form-text\" style={{ color: \"red\" }}>\r\n                  {dup}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n        {sameQuestion && (\r\n          <>\r\n            <div style={{ color: \"red\" }}>Question already exists.</div>\r\n            <label className=\"form-text\" style={{ color: \"red\" }}>\r\n              {questionInputRef.current.value}\r\n            </label>\r\n          </>\r\n        )}\r\n\r\n        <div className={classes.actions}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary d-block ms-auto my-3\"\r\n            onClick={addQuestionHandler}\r\n          >\r\n            Add Question\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateQuestion;\r\n","const DisplayAnswer = (props) => {\r\n  \r\n  const { answer, value, question, index, isLast } = props;\r\n  let option;\r\n  if (props.isSingle) {\r\n    option = (\r\n      <div className=\"col-1\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            readOnly\r\n            name={question}\r\n            checked={value}\r\n            value={index}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    option = (\r\n      <div className=\"col-1\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            readOnly\r\n            checked={value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"row mb-2\">\r\n      {option}\r\n      <div className={isLast ? \"col-8\" : \"col-10\"}>\r\n        <label className=\"form-check-label\">{answer}</label>\r\n      </div>\r\n      {isLast && (\r\n        <div className=\"col-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary d-block ms-auto my-3\"\r\n            onClick={props.removeQuestion}\r\n          >\r\n            Remove Question\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default DisplayAnswer;\r\n","import DisplayAnswer from \"./DisplayAnswer\";\r\nconst ViewQuestion = (props) => {\r\n  const { id, isSingle, question, questionHint, answers } = props.question;\r\n  return (\r\n    <div\r\n      className={`row justify-content-center align-items-center`}\r\n      style={\r\n        props.index % 2 === 0 ? { backgroundColor: \"rgb(247, 248, 249)\" } : null\r\n      }\r\n    >\r\n      <div className=\"row  mb-3\">\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\" htmlFor=\"question\">\r\n            Question :\r\n          </label>\r\n          <label className=\"form-text ms-3\">{question}</label>\r\n        </div>\r\n      </div>\r\n      {questionHint && (\r\n        <div className=\"row  mb-3\">\r\n          <div className=\"col-10\">\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\" htmlFor=\"questionHint\">\r\n                Question Hint :\r\n              </label>\r\n\r\n              <label className=\"form-text  ms-3\">{questionHint}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {answers.map((answer, index) => {\r\n        return (\r\n          <DisplayAnswer\r\n            key={index}\r\n            answer={answer.answer}\r\n            value={answer.value}\r\n            question={question}\r\n            index={index}\r\n            isLast={index ===answers.length-1}\r\n            isSingle={isSingle}\r\n            removeQuestion={props.removeQuestion}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default ViewQuestion;\r\n","import ViewQuestion from \"./ViewQuestion\"\r\nconst ViewQuestions=(props)=>{\r\n    return <div style={{maxHeight:\"500px\",overflowY:\"auto\",overflowX:\"hidden\"}}>\r\n    {props.questions.map((qns,index)=><ViewQuestion index={index} key={qns.id} question={qns} removeQuestion={props.removeQuestion.bind(null,qns.id)}/>)}\r\n    </div>\r\n}\r\nexport default ViewQuestions","import CreateQuestion from \"./CreateQuestion\";\r\nimport ViewQuestions from \"./ViewQuestions\";\r\nconst Questions=(props)=>{\r\n  console.log(\"resetNew\",props.resetNew);\r\n  const content=<><ViewQuestions questions={props.questions} removeQuestion={props.removeQuestion}/>\r\n  <CreateQuestion questionBankId={props.questionBankId} addQuestion={props.addQuestion}  resetNew={props.resetNew}/>\r\n  </>\r\nif( props.questions && props.questions.length==0)\r\n{\r\n    return <><div\r\n    className={`row justify-content-center align-items-center`}\r\n  >\r\n      No Questions found. Please consider adding at least one.\r\n      </div>\r\n      <CreateQuestion questionBankId={props.questionBankId} addQuestion={props.addQuestion} resetNew={props.resetNew}/>\r\n      </>\r\n}\r\nelse\r\n{\r\n  return !props.questions?null:content\r\n  \r\n  \r\n  \r\n}\r\nreturn null;\r\n}\r\nexport default Questions","import Questions from \"./Questions\";\r\n\r\nconst ViewQuestionBanks = (props) => {\r\n  const { isLoading, questionBanks } = props;\r\n\r\n  if (isLoading) return <div className=\"\">Laoding...</div>;\r\n  if (questionBanks.length > 0)\r\n    return (\r\n      <div style={{ border: \"2px solid rgb(247, 248, 249)\" }} className=\"pt-3\">\r\n        {questionBanks.map((qnsBank) => (\r\n          <div key={qnsBank.id} className=\"row mb-3 justify-content-center\">\r\n            <div className=\"col-10\">\r\n              <div key={qnsBank.id} className=\"row align-items-center\">\r\n                <div className=\"col-7\">{qnsBank.title}</div>\r\n                <div className=\"col-3\">\r\n                  {qnsBank.questions.length} questions\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary d-block ms-auto my-3\"\r\n                    onClick={props.removeQuestionBank.bind(null, qnsBank.id)}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n  return null;\r\n};\r\nexport default ViewQuestionBanks;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport CreateQuestionBankComponent from '../components/CreateQuestionBankComponent'\r\nimport ViewQuestionBanks from '../components/ViewQuestionBanks'\r\nconst QuestionBank=()=>{\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [questionBanks, setQuestionBanks] = useState([]);\r\n    useEffect(() => {\r\n      setIsLoading(true);\r\n      const loadData = async () => {\r\n        const response = await fetch(`https://question-bank-json-server.herokuapp.com/questionBank`);\r\n        const data = await response.json();\r\n  \r\n        setQuestionBanks(data);\r\n        setIsLoading(false);\r\n      };\r\n      loadData();\r\n    }, []);\r\n  \r\n    const addQuestionBankHandler=async (body)=>{\r\n        let response= await fetch(`https://question-bank-json-server.herokuapp.com/questionBank`,{\r\n            method:'POST',\r\n            body:JSON.stringify(body),\r\n            headers:{'Content-type':\"application/json\"}\r\n        })\r\n        \r\n        response = await fetch(`https://question-bank-json-server.herokuapp.com/questionBank`);\r\n        const data = await response.json();\r\n  \r\n        setQuestionBanks(data); \r\n    }\r\n    const removeQuestionBankHandler=async (id)=>{\r\n        let response= await fetch(`https://question-bank-json-server.herokuapp.com/questionBank/${id}`,{\r\n            method:'DELETE',\r\n            headers:{'Content-type':\"application/json\"}\r\n        })\r\n        \r\n        response = await fetch(`https://question-bank-json-server.herokuapp.com/questionBank`);\r\n        const data = await response.json();\r\n  \r\n        setQuestionBanks(data); \r\n    }\r\nreturn(\r\n<div style={{border:\"2px solid rgb(247, 248, 249)\"}}>\r\n<CreateQuestionBankComponent addQuestionBank={addQuestionBankHandler}/>\r\n<ViewQuestionBanks isLoading={isLoading} questionBanks={questionBanks} removeQuestionBank={removeQuestionBankHandler}/>\r\n</div>)\r\n}\r\nexport default QuestionBank","import { useState, useEffect } from \"react\";\r\nimport classes from \"./CreateQuestionsForQuestionBankComponent.module.css\";\r\nimport Questions  from \"./Questions\";\r\n\r\nconst CreateQuestionsForQuestionBankComponent = () => {\r\n  const [loading, setIsLoading] = useState(false);\r\n  const [resetNew, setResetNew] = useState(false);\r\n  const [questionBanks, setQuestionBanks] = useState([]);\r\n  const [questions, setQuestions] = useState();\r\n  const [questionBankID, setquestionBankID] = useState();\r\n\r\n  const removeQuestionHandler=async (id)=>{\r\n    let responseGet = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`\r\n    );\r\n    let data = await responseGet.json();\r\n    const questions = data.questions.filter(qns=>qns.id!==id);\r\n    \r\n    const response = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({ questions: questions }),\r\n        headers: { \"Content-type\": \"application/json\" },\r\n      }\r\n    );\r\n    responseGet = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`\r\n    );\r\n    data = await responseGet.json();\r\n    setQuestions(data.questions);\r\n  }\r\n  const addQuestionHandler= async (questions)=>{\r\n    const response = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({ questions: questions }),\r\n        headers: { \"Content-type\": \"application/json\" },\r\n      }\r\n    );\r\n    const responseGet = await fetch(\r\n      `https://question-bank-json-server.herokuapp.com/questionBank/${questionBankID}`\r\n    );\r\n    const data = await responseGet.json();\r\n    setQuestions(data.questions);\r\n    setResetNew(true);\r\n    setTimeout(()=>{\r\n      setResetNew(false);\r\n    },100)\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const loadData = async () => {\r\n      const response = await fetch(\"https://question-bank-json-server.herokuapp.com/questionBank\");\r\n      const data = await response.json();\r\n      \r\n      setQuestionBanks(data);\r\n      setIsLoading(false);\r\n    };\r\n    loadData();\r\n  }, []);\r\n  const questionBankTitleChangeHandler=(e)=>{    \r\n    const qsnBank=questionBanks.find(sqb=>sqb.id===e.target.value)\r\n    setquestionBankID(e.target.value);\r\n    if(qsnBank && qsnBank.questions)\r\n    setQuestions(qsnBank.questions)\r\n    else{\r\n        setQuestions(null)\r\n    }\r\n    \r\n  }\r\n  \r\n  if (loading)\r\n    return (\r\n      <div className=\"justify-content-center align-items-center\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  return (\r\n    <div\r\n      className={`row justify-content-center align-items-center ${classes.content}`} \r\n    >\r\n      <div className=\"col-10\" style={{border:\"2px solid rgb(247, 248, 249)\"}}>\r\n        <form onSubmit={() => {}} className=\"d-flex flex-column\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\" htmlFor=\"title\">\r\n              Question bank title\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n              defaultValue=\"\" onChange={questionBankTitleChangeHandler}\r\n            >\r\n              <option>please select a Question Bank</option>\r\n              {questionBanks.map((questionBank) => (\r\n                <option key={questionBank.id} value={questionBank.id}>\r\n                  {questionBank.title}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <Questions resetNew={resetNew} questions={questions} questionBankId={questionBankID} removeQuestion={removeQuestionHandler} addQuestion={addQuestionHandler} />\r\n          \r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateQuestionsForQuestionBankComponent;\r\n","import CreateQuestionsForQuestionBankComponent from '../components/CreateQuestionsForQuestionBankComponent'\r\nconst createQuestionsForQuestionBank=(props)=><CreateQuestionsForQuestionBankComponent addQuestionBank={props.addQuestionBank}/>\r\n\r\nexport default createQuestionsForQuestionBank;","import classes from './Heading.module.css'\r\nimport { NavLink,Link } from 'react-router-dom'\r\nconst Heading=()=>{\r\n    return <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n    <div className=\"container-fluid\">\r\n      <Link to=\"/\" className={`navbar-brand nav-link`} >Question Banks</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className={`navbar-toggler-icon ${classes[\"nav-link\"]}`}></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/\" activeClassName=\"active\" className={`nav-link`}\r\n   aria-current=\"page\" href=\"#\">Tests</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink  to=\"/question-bank\" activeClassName=\"active\" className={`nav-link`}>Question Banks</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink  to=\"/create-questions\"  activeClassName=\"active\" className={`nav-link`}>Create Questions</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n}\r\nexport default Heading","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\n// import CreateQuestions from './pages/CreateQuestions';\nimport Test from './pages/Test';\nimport QuestionBank from './pages/QuestionBank';\nimport CreateQuestions from './pages/CreateQuestions';\nimport Heading from './components/Heading';\nimport {Route,Routes,Navigate } from 'react-router-dom'\n// able to use this app.import React from \"react\";\n// import {\n//   // BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n// import {Switch} from 'react-router'\nexport const NotFound = () => \n  <div className=\"container\">\n  <h5 className=\"row justify-content-center align-items-center\"\n  style={{minHeight:\"60vh\"}}\n  > 404: Page Not Found</h5>\n  </div>\n\nfunction App() {\n  // console.log(\"process.env.REACT_APP_JSON_SERVER_URL\",process.env)\n  return (\n    <div className=\"container\">\n      <Heading/>\n      {/* <QuestionBank/> */}\n      <Routes basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" exact element={<Test/>}/>\n      <Route path=\"/question-bank\" exact element={<QuestionBank/>}/>\n      <Route path=\"/create-questions\" exact element={<CreateQuestions/>}/>\n      <Route path=\"*\" element={<NotFound/>}/>\n      </Routes>      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n    </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}